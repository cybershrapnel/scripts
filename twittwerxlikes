//script for console to randomly hit like buttons on whichever page you are on at x. built in timers to avoid the bot check.

let clickCount = 0;
let totalLikes = 0;
let maxClicks = getRandomTime(13, 50); // Set the initial random number of clicks for the round
let attempts = 0;
let bigBreakCount = 0;
let intervalId;

function getRandomTime(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
}

function clickRandomLikeButton() {
    // Check if the click count has reached the random maxClicks for this round
    if (clickCount >= maxClicks) {
        totalLikes += clickCount;

        // Check if we've reached over 500 total likes
        if (totalLikes > 500) {
            bigBreakCount++;
            let breakTime;

            if (bigBreakCount % 7 === 0) {
                // 7th big break is 3 hours
                breakTime = 3 * 60 * 60 * 1000; // 3 hours in milliseconds
                console.log(`Reached ${totalLikes} total likes. Taking a 3-hour break (Big Break #${bigBreakCount})...`);
            } else {
                // Other big breaks are 45 minutes
                breakTime = 45 * 60 * 1000; // 45 minutes in milliseconds
                console.log(`Reached ${totalLikes} total likes. Taking a 45-minute break (Big Break #${bigBreakCount})...`);
            }

            totalLikes = 0; // Reset the total likes after a big break
            clickCount = 0; // Reset click count for this round
            clearInterval(intervalId); // Stop the interval

            setTimeout(() => {
                console.log('Break over. Resuming clicks...');
                maxClicks = getRandomTime(13, 50); // Set a new random number of clicks for the next round
                startInterval(); // Restart the interval with random timing
            }, breakTime);
        } else {
            const breakTime = getRandomTime(180, 720) * 1000; // Random time between 3 and 12 minutes in milliseconds
            console.log(`Reached ${maxClicks} clicks. Taking a break for ${breakTime / 60000} minutes...`);
            clearInterval(intervalId); // Stop the interval

            setTimeout(() => {
                console.log('Break over. Resuming clicks...');
                clickCount = 0; // Reset click count
                maxClicks = getRandomTime(13, 50); // Set a new random number of clicks for the next round
                startInterval(); // Restart the interval with random timing
            }, breakTime);
        }

        return;
    }

    // Find all buttons with data-testid="like"
    const likeButtons = document.querySelectorAll('button[data-testid="like"]');

    // Check if there are any like buttons found
    if (likeButtons.length > 0) {
        // Choose a random index from the list of like buttons
        const randomIndex = Math.floor(Math.random() * likeButtons.length);

        // Scroll to the selected button
        likeButtons[randomIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });

        // Click the randomly selected button
        likeButtons[randomIndex].click();

        console.log(`Clicked a like button: ${clickCount + 1} of ${maxClicks}`);

        // Increment the click count
        clickCount++;

        // Reset attempts counter
        attempts = 0;
    } else {
        console.log(`No like buttons found on the page. Attempt: ${attempts + 1} of 50`);
        attempts++;

        // If no like button is found for 50 tries in a row, jump back to the top of the page
        if (attempts >= 50) {
            console.log('50 attempts with no like button found. Jumping back to the top of the page.');
            window.scrollTo({ top: 0, behavior: 'smooth' });
            attempts = 0; // Reset attempts counter
        } else {
            // If no like button is found, scroll to the bottom of the page or further down
            if (attempts === 1) {
                window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });
            } else {
                window.scrollBy(0, window.innerHeight);
            }
        }
    }
}

function startInterval() {
    const randomInterval = getRandomTime(20, 65) * 1000; // Random time between 20 and 65 seconds in milliseconds
    intervalId = setInterval(clickRandomLikeButton, randomInterval);
}

// Start the process with random timing
startInterval();
